(define (equal? a b)
    (cond   ((and (null? a) (null? b)) #t)
            ((and (pair? a) (pair? b)) (and (equal? (car a) (car b)) (equal? (cdr a) (cdr b))))
            ((and (not (pair? a)) (not (pair? b))) (eq? a b))
            (else #f)))

(display (equal? '(this is a list) '(this is a list)))
(newline)
(display  (equal? '(this is a list) '(this (is a) list)))
(newline)
(display  (equal? '(1 2 3 (4 5) 6) '(1 2 3 (4 5) 6)))
(newline)
(display (equal? '(1 2 3 (4 5) 6) '(1 2 3 (4 5 7) 6)) )
(newline)
