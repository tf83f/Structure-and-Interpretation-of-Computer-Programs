

(define (make-account balance password)
    (define (withdraw amount)
        (if (>= balance amount)
            (begin (set! balance (- balance amount)) balance)
            "Insufficient funds"))
    
    (define (deposit amount)
        (set! balance (+ balance amount)) balance)

    (define (call-the-cops) "The cops have been called!") 

    (let ((nb_try 0))
            (lambda (p m)
                (cond   ((not (eq? p password)) (if (< nb_try 7)
                                                    (begin (set! nb_try (+ nb_try 1)) (lambda (x) "Incorrect password"))
                                                    (lambda (x) (call-the-cops))))
                        ((eq? m 'withdraw) withdraw)
                        ((eq? m 'deposit) deposit)
                        (else (error "Unknown request: MAKE-ACCOUNT" m)))))
    )

(define acc (make-account 100 'secret-password))
(display ((acc 'secret-password 'withdraw) 40))
(newline)
(display ((acc 'some-other-password 'deposit) 50))
(newline)
(display ((acc 'some-other-password 'deposit) 50))
(newline)
(display ((acc 'some-other-password 'deposit) 50))
(newline)
(display ((acc 'some-other-password 'deposit) 50))
(newline)
(display ((acc 'some-other-password 'deposit) 50))
(newline)
(display ((acc 'some-other-password 'deposit) 50))
(newline)
(display ((acc 'some-other-password 'deposit) 50))
(newline)
(display ((acc 'some-other-password 'deposit) 50))