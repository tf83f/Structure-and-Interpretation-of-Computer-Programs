(define (make-monitored_1 f)
    (let ((calls 0))
        (lambda (x) 
            (if (eq? x 'how-many-calls?)
                calls
                (begin (set! calls (+ calls 1))(f x))))))
(define (make-monitored f)
    (let ((calls 0))
        (lambda (x)
            (cond   ((eq? x 'how-many-calls?) calls)
                    ((eq? x 'reset-count) (set! calls 0))
                    (else (set! calls (+ calls 1))
                                    (f x))))))

(define s (make-monitored sqrt))
(display (s 100))
(newline)
(display (s 'how-many-calls?))
(newline)
(s 'reset-count)
(display (s 'how-many-calls?))